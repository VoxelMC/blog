---
import config from '../config';
import type { PostFrontmatter } from '../content/config';

interface Props {
	frontmatter?: PostFrontmatter;
	title?: string;
	slug?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { frontmatter, title, slug = '/' } = Astro.props;
let preformattedSlug = [...slug].reverse();
preformattedSlug.push('/');
let formattedSlug =
	slug.startsWith('/') ? slug : preformattedSlug.reverse().join("");
console.log(formattedSlug)

const siteTitle =
	frontmatter ? frontmatter.title + ' | ' + config.title
	: title ? title + ' | ' + config.title
	: config.title;
const siteDescription = frontmatter?.description ?? config.description;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>
<meta name="title" content={siteTitle} />
<meta name="description" content={siteDescription} />
<meta name="author" content={config.author} />

{
	frontmatter?.pubDate && (
		<meta property="article:published_time" content={frontmatter.pubDate} />
	)
}

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={siteTitle} />
<meta property="og:description" content={siteDescription} />
<meta
	property="og:image"
	content=`${import.meta.env.SITE}/blog${formattedSlug}/og.png`
/>

<!-- Twitter -->
<meta property="twitter:card" content="summary" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={siteTitle} />
<meta property="twitter:description" content={siteDescription} />
